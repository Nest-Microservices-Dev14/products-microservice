# ====================== 
# Dependencias
# ====================== 
FROM node:23-alpine3.21 AS deps

WORKDIR /usr/src/app

COPY package*.json ./

RUN npm install

# ====================== 
# Builder -> Construye la aplicación
# ====================== 
FROM node:23-alpine3.21 AS build

WORKDIR /usr/src/app

#Copiar de deps, los módulos de node
COPY --from=deps /usr/src/app/node_modules ./node_modules

#Copiar todo el código fuente (contexto) de la aplicación
COPY . .


#Sitio ideal para ejecutar el testing.
#Si el testing falla, detiende la construcción de la imagen.
#RUN npm run test

#Crea la carpeta ./dist
RUN npm run build

#Instala solo lo necesario para producción (rápido y seguro).
#Borra el caché para que la imagen no quede gorda e innecesaria.
RUN npm ci -f --only=production && npm cache clean --force

#Construimos Prisma para que no tenga errores al iniciar la base de datos.
RUN npx prisma generate

# ====================== 
# Crear imagen Docker
# ======================
FROM node:23-alpine3.21 AS prod

WORKDIR /usr/src/app

COPY --from=build /usr/src/app/node_modules ./node_modules
#Copiar la carpeta ./dist
COPY --from=build /usr/src/app/dist ./dist
#Copiar la carpeta ./Prisma 
COPY --from=build /usr/src/app/prisma ./prisma

#Podemos enviar variables de entorno por acá.
ENV NODE_ENV=production

#Usamos usuario con menos privilegios
#Nos ayuda a estar seguros que no hayan cambios inesperados.
USER node

EXPOSE 3000
CMD [ "node", "dist/main.js" ]

